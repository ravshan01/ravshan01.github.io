{"version":3,"sources":["Card.js","Favourite.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","favouriteCard","favouriteColor","color","className","this","changeColor","isFavourite","changeFavourite","copy","React","Component","CardBg","colorStyle","backgroundColor","style","CardControls","onClick","e","Favourite","newProps","newState","favouriteColors","colors","map","elem","key","App","state","randomColor","bind","setState","arr","i","Math","round","random","length","deleteColor","filter","concat","copyColor","_copyColorInput","value","select","document","execCommand","eventDom","target","closest","classList","add","text","createTextNode","append","setTimeout","removeChild","remove","type","ref","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b275f233.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/card.css';\r\n\r\n\r\nclass Card extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\r\n\t\tif ( props.favouriteCard ) this.favouriteColor = props.color; // для удаления\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\treturn (\r\n\t\t\t<div className={this.props.favouriteCard ? 'favourite-card' : 'main-card'}>\r\n\r\n\t\t\t\t<CardBg color={this.props.color} />\r\n\t\t\t\t<CardControls\r\n\t\t\t\t\tchangeColor={this.props.changeColor} favouriteCard={this.props.favouriteCard} favouriteColor={this.favouriteColor}\r\n\t\t\t\t\tisFavourite={this.props.isFavourite} changeFavourite={this.props.changeFavourite}\r\n\t\t\t\t\tcopy={this.props.copy}\r\n\t\t\t\t/>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass CardBg extends React.Component{\r\n\trender(){\r\n\t\tlet colorStyle = {\r\n\t\t\tbackgroundColor : this.props.color\r\n\t\t}\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"card\" style={colorStyle}>\r\n\t\t\t\t<div className=\"color-value\">{this.props.color}</div>\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\nclass CardControls extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"card-controls\">\r\n\r\n\t\t\t\t<span className=\"favourite-link\" onClick={ () => this.props.changeFavourite(this.props.favouriteColor) }>\r\n\t\t\t\t\t{this.props.isFavourite ? <i className=\"fa fa-heart\"></i> : <i className=\"fa fa-heart-o\"></i>}\r\n\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t{this.props.favouriteCard ? false :\r\n\t\t\t\t\t<span className=\"change-color-link\" onClick={this.props.changeColor}>\r\n\t\t\t\t\t\t<i className=\"fa fa-arrow-right\"></i>\r\n\t\t\t\t\t</span>}\r\n\r\n\r\n\t\t\t\t<span className=\"copy-link\" onClick={ (e) => this.props.copy(e, this.props.favouriteColor) }>\r\n\t\t\t\t\t<i className=\"fa fa-copy\"></i>\r\n\t\t\t\t</span>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './css/favourite.css';\r\n\r\nimport Card from './Card.js';\r\n\r\n\r\nclass Favourite extends React.Component{\r\n\r\n\tshouldComponentUpdate(newProps, newState){\r\n\t\tif ( newProps.favouriteColors == this.props.favouriteColors ) {\r\n\t\t\treturn false\r\n\t\t};\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\tlet favouriteColors = this.props.favouriteColors;\r\n\t\tlet colors = favouriteColors.map( elem =>{\r\n\t\t\treturn (\r\n\r\n\t\t\t\t<Card\r\n\t\t\t\t\tcolor={elem} key={elem} isFavourite={true}\r\n\t\t\t\t\tfavouriteCard={true} changeFavourite={this.props.changeFavourite}\r\n\t\t\t\t\tcopy={this.props.copy} \r\n\t\t\t\t/>\r\n\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"favourite\">\r\n\t\t\t\t<p> <i className=\"fa fa-heart\"></i> <span>Избранное</span> </p>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"favourite-cards\">\r\n\t\t\t\t{colors}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t}\r\n}\r\n\r\n\r\nexport default Favourite;","import React from 'react';\nimport './css/app.css';\n\nimport Card      from './Card.js';\nimport Favourite from './Favourite.js';\n\n\nclass App extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcolor     : this.randomColor(),\n\t\t\tisFavourite : false,\n\t\t\tfavouriteColors : []\n\t\t}\n\n\t\tthis.changeColor = this.changeColor.bind(this);\n\t\tthis.randomColor = this.randomColor.bind(this);\n\n\t\tthis.changeFavourite = this.changeFavourite.bind(this);\n\t\tthis.copy = this.copy.bind(this);\n\t}\n\n\n\tchangeColor(){\n\n\t\tthis.setState({\n\t\t\tcolor : this.randomColor(),\n\t\t\tisFavourite: false\n\t\t})\n\n\t}\n\n\trandomColor(){\n\t\tlet color = '#';\n\t\tconst arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\t\tfor(let i = 0; i < 6; i++){\n\t\t\tlet random =  Math.round( Math.random() * (arr.length - 1) );\n\t\t\tcolor += arr[random];\n\t\t}\n\n\t\treturn color;\n\t}\n\n\n\tchangeFavourite(deleteColor){\n\t\tthis.setState( (state, props) =>{\n\n\t\t\tif ( deleteColor ){ // удаление если цвет не активный\n\t\t\t\tlet isFavourite = ( state.color == deleteColor ) ? false : state.isFavourite; //если удаляемый цвет активный\n\n\t\t\t\tlet colors = state.favouriteColors.filter( elem => {\n\t\t\t\t\tif ( elem != deleteColor ) return true;\n\t\t\t\t})\n\n\t\t\t\treturn {\n\t\t\t\t\tfavouriteColors : colors,\n\t\t\t\t\tisFavourite     : isFavourite\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( state.isFavourite && !deleteColor ){\n\n\t\t\t\tlet colors = state.favouriteColors.filter( elem => {\n\t\t\t\t\tif ( elem != state.color ) return true;\n\t\t\t\t})\n\n\t\t\t\treturn {\n\t\t\t\t\tisFavourite : false,\n\t\t\t\t\tfavouriteColors : colors\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif ( state.isFavourite == false ){ // добавляем в избранное\n\t\t\t\treturn {\n\t\t\t\t\tisFavourite : true,\n\t\t\t\t\tfavouriteColors : state.favouriteColors.concat( [state.color] ) \n\t\t\t\t}\n\n\t\t\t}\n\n\t\t})\n\t}\n\n\n\tcopy(e, color){\n\t\tlet copyColor = ''; \n\n\t\tif ( color )  copyColor = color;\n\t\tif ( !color ) copyColor = this.state.color;\n\n\t\tthis._copyColorInput.value = copyColor;\n\n\t\tthis._copyColorInput.select();\n\t\tdocument.execCommand('copy');\n\n\n\t\tlet eventDom = e.target.closest('span');\n\t\teventDom.classList.add('copied')\n\n\t\tlet text = document.createTextNode('Copied');\n\t\teventDom.append(text);\n\t\tsetTimeout(() => {\n\t\t\teventDom.removeChild(text);\n\t\t\teventDom.classList.remove('copied')\n\t\t}, 1000)\n\t\t\n\t}\n\n\n\n\trender(){\n\n\t\treturn (\n\t\t\t<>\n\t\t\t<Favourite\n\t\t\t\tfavouriteColors={this.state.favouriteColors} changeFavourite={this.changeFavourite} \n\t\t\t\tcopy={this.copy}\n\t\t\t/>\n\n\t\t\t<Card\n\t\t\t\tcolor={this.state.color} changeColor={this.changeColor} \n\t\t\t\tisFavourite={this.state.isFavourite} changeFavourite={this.changeFavourite}\n\t\t\t\tcopy={this.copy}\n\t\t\t/>\n\n\t\t\t<input type=\"text\" className=\"copy-color-input\" ref={ elem => this._copyColorInput = elem } />\n\t\t\t</>\n\t\t);\n\t}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}